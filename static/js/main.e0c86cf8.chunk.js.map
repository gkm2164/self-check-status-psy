{"version":3,"sources":["data/questions.ts","App.tsx","BarGraph.js","reportWebVitals.ts","index.tsx"],"names":["questions","Indicator","container","item","xs","Question","type","id","question","selectedValues","handleChange","alignItems","map","answer","checked","onChange","value","name","inputProps","App","data","def","useState","calculatedResult","setCalculatedResult","params","URLSearchParams","window","location","search","get","JSON","parse","atob","setSelectedValues","externalScore","setExternalScore","internalScore","setInternalScore","deeperScore","setDeeperScore","spiritualScore","setSpiritualScore","code","Buffer","from","stringify","toString","encodeURI","history","replaceState","calcScore","scoreMap","inverseScoreMap","inverse","Set","calcLineScore","answers","idx","has","reduce","acc","elem","useEffect","className","component","Paper","external","internal","deeper","spiritual","BarGraph","max","argumentField","valueField","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0c86cf8.chunk.js","sourcesContent":["interface QuestionareType {\n  id: number;\n  question: string;\n}\n\ninterface QuestionareTypes {\n  external: QuestionareType[]\n  internal: QuestionareType[]\n  deeper: QuestionareType[]\n  spiritual: QuestionareType[]\n}\n\nexport const questions: QuestionareTypes = {\n  \"external\": [\n    {\n      \"id\": 1,\n      \"question\": \"내 삶의 방식에 만족한다.\",\n    },\n    {\n      \"id\": 2,\n      \"question\": \"사람들과 편하게 어울린다.\",\n    },\n    {\n      \"id\": 3,\n      \"question\": \"새로운 상황이 어렵다.\",\n    },\n    {\n      \"id\": 4,\n      \"question\": \"내 직업은 내 재능과 능력을 제대로 활용하기 어렵다.\",\n    },\n    {\n      \"id\": 5,\n      \"question\": \"돈을 긍정적으로 여긴다.\",\n    },\n    {\n      \"id\": 6,\n      \"question\": \"시간을 효율적으로 쓰지 못한다.\",\n    },\n    {\n      \"id\": 7,\n      \"question\": \"체력이 좋다.\",\n    },\n    {\n      \"id\": 8,\n      \"question\": \"책임감에 짓눌리는 느낌이다.\",\n    },\n    {\n      \"id\": 9,\n      \"question\": \"놀거나 쉴 시간이 없다.\",\n    },\n    {\n      \"id\": 10,\n      \"question\": \"시작한 일은 대체로 끝을 본다.\",\n    }\n  ],\n  \"internal\": [\n    {\n      \"id\": 1,\n      \"question\": \"나는 나 자신을 좋아한다.\",\n    },\n    {\n      \"id\": 2,\n      \"question\": \"가족과 사이가 좋다.\",\n    },\n    {\n      \"id\": 3,\n      \"question\": \"힘든 감정 상태를 자주 경험한다.(슬픔, 불안, 분노, 스트레스)\",\n    },\n    {\n      \"id\": 4,\n      \"question\": \"혼자 있을 때면 편치 않은 기분이 든다.\",\n    },\n    {\n      \"id\": 5,\n      \"question\": \"나 자신과 타인을 균형 있게 잘 챙긴다.\",\n    },\n    {\n      \"id\": 6,\n      \"question\": \"집중하여 명료하게 생각하기 어렵다.\",\n    },\n    {\n      \"id\": 7,\n      \"question\": \"애정 표현은 어려운 일이 아니다.\",\n    },\n    {\n      \"id\": 8,\n      \"question\": \"내 인간관계가 불만족스럽다.\",\n    },\n    {\n      \"id\": 9,\n      \"question\": \"내 감정을 정확히 아는 경우가 드물다.\",\n    },\n    {\n      \"id\": 10,\n      \"question\": \"내 몸과 긍정적인 관계를 맺고 있다.\",\n    }\n  ],\n  \"deeper\": [\n    {\n      \"id\": 1,\n      \"question\": \"나에게 무엇이 최선인지 잘 안다.\",\n    },\n    {\n      \"id\": 2,\n      \"question\": \"다양한 방식으로 창의력을 발휘할 수 있다.\",\n    },\n    {\n      \"id\": 3,\n      \"question\": \"내 무의식에서 일어나는 일에 관심이 없다.\",\n    },\n    {\n      \"id\": 4,\n      \"question\": \"내 직감과 내면의 안내를 좀처럼 따르지 않는다.\",\n    },\n    {\n      \"id\": 5,\n      \"question\": \"미래를 긍정적으로 보려 한다.\",\n    },\n    {\n      \"id\": 6,\n      \"question\": \"무슨 꿈을 꾸든 별로 신경 쓰지 않는다.\",\n    },\n    {\n      \"id\": 7,\n      \"question\": \"내가 성장, 발전하고 있다는 것을 안다.\",\n    },\n    {\n      \"id\": 8,\n      \"question\": \"나 자신을 치유할 능력이 있는지 잘 모르겠다.\",\n    },\n    {\n      \"id\": 9,\n      \"question\": \"직접 경험해보지 않은 것은 상상하기 어렵다.\",\n    },\n    {\n      \"id\": 10,\n      \"question\": \"자연과 연결된 느낌을 자주 받는다.\",\n    }\n  ],\n  \"spiritual\": [\n    {\n      \"id\": 1,\n      \"question\": \"'더 높은 힘'의 존재를 인식하고 있다.(신, 생명력, 진리, 도)\",\n    },\n    {\n      \"id\": 2,\n      \"question\": \"타인을 향한 사랑과 연민을 실천하려 노력한다.\",\n    },\n    {\n      \"id\": 3,\n      \"question\": \"나에게 영성이 딱히 중요한 것 같지는 않다.\",\n    },\n    {\n      \"id\": 4,\n      \"question\": \"살아 있다는 것 자체가 원대한 목적이라고는 믿지 않는다.\",\n    },\n    {\n      \"id\": 5,\n      \"question\": \"내 삶이 세상에 긍정적인 영향을 미치면 좋겠다.\",\n    },\n    {\n      \"id\": 6,\n      \"question\": \"정기적으로 영적 수련을 하지는 않는다.(명상, 사유, 기도)\",\n    },\n    {\n      \"id\": 7,\n      \"question\": \"생각과 감정을 잠재우는 활동에 시간을 들인다.\",\n    },\n    {\n      \"id\": 8,\n      \"question\": \"피상적인 활동과 생각에 쉽게 사로잡힌다.\",\n    },\n    {\n      \"id\": 9,\n      \"question\": \"살면서 하는 경험의 의미를 깊이 생각하지 않는 편이다.\",\n    },\n    {\n      \"id\": 10,\n      \"question\": \"중요한 결정을 할 때는 영적으로 '옳은'것을 따른다.\",\n    }\n  ],\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {questions} from \"./data/questions\";\nimport {\n  Box,\n  Grid,\n  Paper,\n  Radio,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport {BarGraph} from \"./BarGraph\";\n\ntype Answer = 'DD' | 'SD' | 'SA' | 'DA'\n\ninterface SelectedValues {\n  [typename: string]: Answer[]\n}\n\ninterface QuestionProp {\n  type: string;\n  id: number;\n  question: string;\n  selectedValues: SelectedValues;\n  handleChange: (a: string, b: number, c: Answer) => void;\n}\n\nfunction App() {\n  const [calculatedResult, setCalculatedResult] = useState<any[]>([]);\n  const params = new URLSearchParams(window.location.search);\n\n  function getOrDefault(data: string | null, def: SelectedValues): SelectedValues {\n    if (data == null) return def;\n    else return JSON.parse(atob(data)) as SelectedValues;\n  }\n\n  const [selectedValues, setSelectedValues] = useState<SelectedValues>(getOrDefault(\n    params.get(\"data\"),\n    {\n      \"external\": ['DD', 'DD', 'DA', 'DA', 'DD', 'DA', 'DD', 'DA', 'DA', 'DD'],\n      \"internal\": ['DD', 'DD', 'DA', 'DA', 'DD', 'DA', 'DD', 'DA', 'DA', 'DD'],\n      \"deeper\": ['DD', 'DD', 'DA', 'DA', 'DD', 'DA', 'DD', 'DA', 'DA', 'DD'],\n      \"spiritual\": ['DD', 'DD', 'DA', 'DA', 'DD', 'DA', 'DD', 'DA', 'DA', 'DD']\n    }));\n  const [externalScore, setExternalScore] = useState(0);\n  const [internalScore, setInternalScore] = useState(0);\n  const [deeperScore, setDeeperScore] = useState(0);\n  const [spiritualScore, setSpiritualScore] = useState(0);\n\n  function handleChange(type: string, id: number, answer: Answer) {\n    selectedValues[type][id - 1] = answer;\n    setSelectedValues(selectedValues);\n\n    const code = Buffer.from(JSON.stringify(selectedValues)).toString('base64');\n    const value = encodeURI(code);\n\n    window.history.replaceState(\"\", \"\", `/self-check-status-psy?data=${value}`);\n\n    calcScore();\n  }\n\n  const scoreMap = {\n    'DD': 0,\n    'SD': 1,\n    'SA': 2,\n    'DA': 3,\n  }\n\n  const inverseScoreMap = {\n    'DD': 3,\n    'SD': 2,\n    'SA': 1,\n    'DA': 0,\n  }\n  const inverse = new Set([3, 4, 6, 8, 9]);\n\n  function calcLineScore(answers: Answer[]) {\n    return answers.map((answer, idx) => {\n      if (inverse.has(idx + 1)) {\n        return inverseScoreMap[answer];\n      } else {\n        return scoreMap[answer];\n      }\n    }).reduce((acc, elem) => acc + elem)\n  }\n\n  function calcScore() {\n    setExternalScore(calcLineScore(selectedValues[\"external\"]))\n    setInternalScore(calcLineScore(selectedValues[\"internal\"]))\n    setDeeperScore(calcLineScore(selectedValues[\"deeper\"]))\n    setSpiritualScore(calcLineScore(selectedValues[\"spiritual\"]))\n\n    setCalculatedResult([\n      {\n        \"argument\": \"외적인삶\",\n        \"value\": externalScore\n      },\n      {\n        \"argument\": \"내적인삶\",\n        \"value\": internalScore\n      },\n      {\n        \"argument\": \"심층적삶\",\n        \"value\": deeperScore,\n      },\n      {\n        \"argument\": \"영적인삶\",\n        \"value\": spiritualScore\n      }\n    ])\n  }\n\n  useEffect(() => {\n    calcScore();\n  }, [selectedValues]);\n\n  return (\n    <div className=\"App\">\n      <Grid container>\n        <Grid item xs={4}/>\n        <Grid item xs={4}>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>척도</TableCell>\n                  <TableCell>의미</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>DD</TableCell>\n                  <TableCell>전혀 아니다</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>SD</TableCell>\n                  <TableCell>안그런 편이다</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>SA</TableCell>\n                  <TableCell>그런 편이다</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>DA</TableCell>\n                  <TableCell>확실히 그렇다</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={4}/>\n      </Grid>\n      <h1>외적인 삶: {externalScore}</h1>\n      <Indicator/>\n      {questions.external.map(({id, question}) =>\n        <Question type={\"external\"}\n                  id={id}\n                  question={question}\n                  selectedValues={selectedValues}\n                  handleChange={handleChange}/>)}\n      <h1>내적인 삶: {internalScore}</h1>\n      <Indicator/>\n      {questions.internal.map(({id, question}) =>\n        <Question type={\"internal\"}\n                  id={id}\n                  question={question}\n                  selectedValues={selectedValues}\n                  handleChange={handleChange}/>)}\n      <h1>심층적 삶: {deeperScore}</h1>\n      <Indicator/>\n      {questions.deeper.map(({id, question}) =>\n        <Question type={\"deeper\"}\n                  id={id}\n                  question={question}\n                  selectedValues={selectedValues}\n                  handleChange={handleChange}/>)}\n      <h1>영적인 삶: {spiritualScore}</h1>\n      <Indicator/>\n      {questions.spiritual.map(({id, question}) =>\n        <Question type={\"spiritual\"}\n                  id={id}\n                  question={question}\n                  selectedValues={selectedValues}\n                  handleChange={handleChange}/>)}\n      <Grid container>\n        <Grid item xs={12}>\n          <BarGraph data={calculatedResult}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst Indicator = () => <Grid container>\n  <Grid item xs={6}/>\n  <Grid item xs={1}/>\n  <Grid item xs={1}>DD</Grid>\n  <Grid item xs={1}>SD</Grid>\n  <Grid item xs={1}>SA</Grid>\n  <Grid item xs={1}>DA</Grid>\n  <Grid item xs={1}/>\n</Grid>\n\n\nfunction Question({type, id, question, selectedValues, handleChange}: QuestionProp) {\n  return (<div>\n      <Grid container>\n        <Grid item xs={6}>\n          <Box alignItems=\"flex-start\">\n            {question}\n          </Box>\n        </Grid>\n        <Grid item xs={6}>\n          <Box alignItems=\"flex-start\">\n            {(['DD', 'SD', 'SA', 'DA'] as Answer[]).map(answer => <>\n              <Radio\n                checked={selectedValues[type][id - 1] === answer}\n                onChange={() => handleChange(type, id, answer)}\n                value={answer}\n                name={`question-button-${type}-${id}`}\n                inputProps={{'aria-label': answer}}/></>)}\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default App;","import {ArgumentAxis, BarSeries, Chart, Title, ValueAxis} from \"@devexpress/dx-react-chart-material-ui\";\nimport {Animation} from \"@devexpress/dx-react-chart\";\nimport {Paper} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport function BarGraph({data}) {\n  return <Paper>\n    <Chart\n      data={data}\n    >\n\n      <ArgumentAxis/>\n      <ValueAxis max={30} />\n\n      <BarSeries argumentField=\"argument\"\n                 valueField=\"value\"\n      />\n      <Title text={\"삶의 균형도\"} />\n      <Animation />\n    </Chart>\n  </Paper>\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}